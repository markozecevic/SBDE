load("~/R/SBDE/testscr/DEA6.RData")
analyses <- c(DEA1, DEA2, DEA3, DEA4, DEA5, DEA6)
alpha <- 0.05
n <- length(analyses)
coln <- sapply(analyses, function(x) x@title)
features = character(0)
for (i in 1:n) {
features <- c(features, rownames(analyses[[i]]@analysis_results))
}
features <- sort(unique(features))
d <- data.frame(row.names = features, sapply(analyses, function(x) 1*(x@analysis_results[features,"q_value"]<=alpha)))
names(d) <- coln
d[is.na(d)] <- 0
# analyze only those genes which are found to be DE at least once
d <- d[rowMeans(d)>0, ]
distance <- dist(t(d))
distance
heatmap(as.matrix(distance))
heatmap(as.matrix(distance), Colv = NA)
heatmap(as.matrix(distance), Rowv = NA)
heatmap(as.matrix(distance), Colv = NA)
heatmap(as.matrix(distance))
?heatmap
heatmap.2
min(distance)
which.min(distance)
distance
?dist
distance[7]
distance[7]$rownames
distance[7]$names
names(distance[7])
?dist
distance[2]
distance[5]
labels(distance[5])
labels(distance[7])
labels(distance)
labels(distance)[7]
plot(hclust(d))
plot(hclust(distance))
?hclust
plot(hclust(distance), hang = -1)
?barplot
analyses <- c(DEA1, DEA2, DEA3, DEA4, DEA5, DEA6)
alpha <- 0.05
n <- length(analyses)
coln <- sapply(analyses, function(x) x@title)
features = character(0)
for (i in 1:n) {
features <- c(features, rownames(analyses[[i]]@analysis_results))
}
features <- sort(unique(features))
d <- data.frame(row.names = features, sapply(analyses, function(x) 1*(x@analysis_results[features,"q_value"]<=alpha)))
names(d) <- coln
d[is.na(d)] <- 0
d <- colSums(d)
d
barplot(d)
d <- sort(colSums(d))
d <- sort(colSums(d), decreasing = FALSE)
d <- order(colSums(d), decreasing = FALSE)
colSums(d)
analyses <- c(DEA1, DEA2, DEA3, DEA4, DEA5, DEA6)
alpha <- 0.05
n <- length(analyses)
coln <- sapply(analyses, function(x) x@title)
features = character(0)
for (i in 1:n) {
features <- c(features, rownames(analyses[[i]]@analysis_results))
}
features <- sort(unique(features))
d <- data.frame(row.names = features, sapply(analyses, function(x) 1*(x@analysis_results[features,"q_value"]<=alpha)))
names(d) <- coln
d[is.na(d)] <- 0
d <- order(colSums(d), decreasing = FALSE)
d
analyses <- c(DEA1, DEA2, DEA3, DEA4, DEA5, DEA6)
alpha <- 0.05
n <- length(analyses)
coln <- sapply(analyses, function(x) x@title)
features = character(0)
for (i in 1:n) {
features <- c(features, rownames(analyses[[i]]@analysis_results))
}
features <- sort(unique(features))
d <- data.frame(row.names = features, sapply(analyses, function(x) 1*(x@analysis_results[features,"q_value"]<=alpha)))
names(d) <- coln
d[is.na(d)] <- 0
d <- sort(colSums(d), decreasing = FALSE)
d
barplot(d, ...)
barplot(d)
barplot(d, horiz = TRUE)
barplot(d, names.arg = colnames(d))
barplot(d, names.arg = c(1,2,3,4,5,6)
)
analyses <- c(DEA1, DEA2, DEA3, DEA4, DEA5, DEA6)
alpha <- 0.05
fill_colors = c("skyblue", "pink1", "mediumorchid", "orange", "chartreuse3", "firebrick2")
n <- length(analyses)
coln <- sapply(analyses, function(x) x@title)
features = character(0)
for (i in 1:n) {
features <- c(features, rownames(analyses[[i]]@analysis_results))
}
features <- sort(unique(features))
d <- data.frame(row.names = features, sapply(analyses, function(x) 1*(x@analysis_results[features,"q_value"]<=alpha)))
names(d) <- coln
d[is.na(d)] <- 0
d <- sort(colSums(d), decreasing = FALSE)
barplot(d, col = fill_colors)
barplot(d, names.arg = NULL, col = fill_colors)
barplot(d, names.arg = NA, col = fill_colors)
colnames(d)
d
colnames(d)
names(d)
legend("topleft", names(d), fill = fill_colors, bty = "n")
barplot(d, names.arg = NA, col = fill_colors, legend.text = names(d))
barplot(d, names.arg = NA, col = fill_colors, legend.text = TRUE)
barplot(d, names.arg = NA, col = fill_colors, legend.text = TRUE, args.legend = list(x = "bottomright", bty = "n"))
barplot(d, names.arg = NA, col = fill_colors, legend.text = TRUE, args.legend = list(x = "topright", bty = "n"))
?args.legend
barplot(d, names.arg = NA, col = fill_colors, legend.text = TRUE, args.legend = list(x = "topright"))
barplot(d, names.arg = NA, col = fill_colors, legend.text = TRUE, args.legend = list(x = "bottomright"))
strwidth(names(d))
max(strwidth(names(d)))
barplot(d, names.arg = NA, col = fill_colors, legend.text = TRUE, args.legend = list(x = "bottomright", text.width = max(strwidth(names(d)))))
barplot(d, names.arg = NA, col = fill_colors, legend.text = TRUE, args.legend = list(x = "bottomright", text.width = 2*max(strwidth(names(d)))))
barplot(d, names.arg = NA, col = fill_colors, legend.text = TRUE, args.legend = list(x = "bottomright", text.width = 1.6*max(strwidth(names(d)))))
analyses <- c(DEA1, DEA2, DEA3, DEA4, DEA5, DEA6)
alpha <- 0.05
your_token <- "29dd0f0d333e473cbb094e8b1014e0d1"
your_project <- "marko_zecevic/sbde-test"
your_platform <- "https://api.sbgenomics.com/v2"
testDEA <- newDEA("Hisat_and_cuffdiff", your_token, your_project, your_platform,
align_wf = "hisat2", de_wf = "cufflinks")
testDEA
testDEA@alignment_task <- "60d9459c-9271-480f-a4e4-70e4adc42b3b"
setwd("~/R/SBDE/testscr")
save(testDEA, file = "testDEAaligned.RData")
testDEA@alignment_task
testDEA@aligned_reads <- list_bam(testDEA)
testDEA@aligned_reads
testDEA@aligned_reads$condition <- c("untreated", "untreated", "treated", "treated", "untreated", "treated", "treated", "untreated")
testDEA@aligned_reads
testDEA <- analyzeForDE(testDEA, should_run = TRUE)
testDEA <- newDEA("Hisat_and_DESeq2", your_token, your_project, your_platform,
align_wf = "hisat2", de_wf = "deseq2")
testDEA
testDEA@alignment_task <- "60d9459c-9271-480f-a4e4-70e4adc42b3b"
save(testDEA, file = "testDEAaligned.RData")
testDEA@aligned_reads <- list_bam(testDEA)
testDEA@aligned_reads
testDEA@aligned_reads$condition <- c("untreated", "untreated", "treated", "treated", "untreated", "treated", "treated", "untreated")
testDEA@aligned_reads
testDEA <- analyzeForDE(testDEA, should_run = TRUE)
save(testDEA, file = "testDEAquantified.RData")
analyses <- c(DEA1, DEA2, DEA3, DEA4, DEA5, DEA6)
sapply(analyses, function (x) x@title)
plotVenn(analyses[-4], 0.05, lty = "blank", fill = c("skyblue", "pink1", "mediumorchid", "orange", "chartreuse3"))
analyses <- c(DEA1, DEA2, DEA3, DEA4, DEA5, DEA6)
alpha <- 0.05
fill = c("skyblue", "pink1", "mediumorchid", "orange", "chartreuse3", "firebrick2")
n <- length(analyses)
coln <- sapply(analyses, function(x) x@title)
features = character(0)
for (i in 1:n) {
features <- c(features, rownames(analyses[[i]]@analysis_results))
}
features <- sort(unique(features))
d <- data.frame(row.names = features, sapply(analyses, function(x) 1*(x@analysis_results[features,"q_value"]<=alpha)))
names(d) <- coln
d[is.na(d)] <- 0
o <- order(colSums(d), decreasing = FALSE)
o
d <- d[o]
d
View(d)
fill
fill[o]
barplot(d, names.arg = NA, col = fill[o], legend.text = TRUE, main = "Number of differentially expressed genes",
args.legend = list(x = "bottomright", text.width = max(strwidth(names(d)))))
d
analyses <- c(DEA1, DEA2, DEA3, DEA4, DEA5, DEA6)
alpha <- 0.05
fill = c("skyblue", "pink1", "mediumorchid", "orange", "chartreuse3", "firebrick2")
n <- length(analyses)
coln <- sapply(analyses, function(x) x@title)
features = character(0)
for (i in 1:n) {
features <- c(features, rownames(analyses[[i]]@analysis_results))
}
features <- sort(unique(features))
d <- data.frame(row.names = features, sapply(analyses, function(x) 1*(x@analysis_results[features,"q_value"]<=alpha)))
names(d) <- coln
d[is.na(d)] <- 0
o <- order(colSums(d), decreasing = FALSE)
d <- colSums(d)[o]
barplot(d, names.arg = NA, col = fill[o], legend.text = TRUE, main = "Number of differentially expressed genes",
args.legend = list(x = "bottomright", text.width = max(strwidth(names(d)))))
}
plotVenn(analyses[-4], 0.05, lty = "blank", fill = c("skyblue", "pink1", "mediumorchid",
"chartreuse3", "firebrick2"))
?draw.quintuple.venn
setwd("~/R/SBDE")
devtools::build()
devtools::build_vignettes()
devtools::use_testthat()
devtools::load_all(".")
load("~/R/SBDE/testscr/DEA1.RData")
DEA1@quantification_DE_wf
load("~/R/SBDE/testscr/DEA2.RData")
DEA2@quantification_DE_wf
DEA2@quantification_DE_task
p <- DEA2@project
p$file(origin.task = "49650465-73bc-4416-8270-23ccd401890d")
p
files <- p$file(origin.task = "49650465-73bc-4416-8270-23ccd401890d")
files
library(sevenbridges)
files <- p$file(origin.task = "49650465-73bc-4416-8270-23ccd401890d")
files
files <- p$file(origin.task = "f9a08-e793-41bc-b88c-a71847c289b0")
files
p$file
p$file()
p$file(task.id = "f9a08-e793-41bc-b88c-a71847c289b0")
your_token <- "29dd0f0d333e473cbb094e8b1014e0d1"
your_project <- "marko_zecevic/sbde-test"
your_platform <- "https://api.sbgenomics.com/v2"
a <- Auth(token = your_token, url = your_platform)
a$task(id = "bb7f9a08-e793-41bc-b88c-a71847c289b0")$file()
a$task(id = "b017718c-3967-444a-ac9b-6bea8d002623")$file()
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/bodymap_eset.RData")
load(file=con)
close(con)
bm = bodymap.eset
edata = exprs(bm)
pdata_bm=pData(bm)
pdata_bm=pData(bm)
edata = exprs(bm)
pdata_bm
edata[1,]
fit <- lm(edata[1,] ~ as.factor(pdata_bm$num.tech.reps))
summary(fit)
plot(pdata_bm$num.tech.reps,edata[1,])
?abline
abline(fit$coefficients)
fit$coefficients[1]
abline(fit$coefficients[1],fit$coefficients[2])
abline(fit$coefficients[1],fit$coefficients[2])
abline(fit)
fit
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/bodymap_eset.RData")
load(file=con)
close(con)
bm = bodymap.eset
edata = exprs(bm)
pdata_bm=pData(bm)
edata = exprs(bm)
pdata_bm=pData(bm)
pdata_bm
edata[1,]
fit <- lm(edata[1,] ~ pdata_bm$age + pdata_bm$age)
fit
fit <- lm(edata[1,] ~ pdata_bm$age + pdata_bm$sex)
fit <- lm(edata[1,] ~ pdata_bm$age + pdata_bm$gender)
fit
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/montpick_eset.RData")
load(file=con)
close(con)
mp = montpick.eset
pdata=pData(mp)
edata=as.data.frame(exprs(mp))
fdata = fData(mp)
edata = log2(as.matrix(edata) + 1)
View(edata)
pdata
mod = model.matrix(~ pdata$population)
fit = lm.fit(mod,t(edata))
fit
dim(fit$residuals)
dim(fit$coefficients)
dim(fit$effects)
dim(fit$residuals)
dim(fit$effects)
dim(fit$coefficients)
fit$residuals[1]
fit$residuals[1,]
fit$residuals[,1]
fit$coefficients
fit$coefficients[1,1]
fit$coefficients[1,]
fit$coefficients[,1]
dim(edata)
dim(fit$residuals)
dim(fit$effects)
dim(fit$coefficients)
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/bodymap_eset.RData")
load(file=con)
close(con)
bm = bodymap.eset
edata = exprs(bm)
pdata_bm=pData(bm)
fit$coefficients[,1]
par(mfrow=c(1,2))
hist(fit$coefficients[1,],breaks=100,col=2,xlab="Intercept")
hist(fit$coefficients[2,],breaks=100,col=2,xlab="Strain")
abline(v=0,lwd=3,col=1)
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/bodymap_eset.RData")
load(file=con)
close(con)
bm = bodymap.eset
edata = exprs(bm)
pdata_bm=pData(bm)
?lmFit
library(limma)
?lmFit
edata = log2(as.matrix(edata) + 1)
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/bodymap_eset.RData")
load(file=con)
close(con)
bm = bodymap.eset
edata = exprs(bm)
pdata_bm=pData(bm)
library(limma)
edata = log2(as.matrix(edata) + 1)
View(edata)
pdata_bm
mod = model.matrix(~ pdata_bm$age)
fit_limma = lmFit(edata,mod)
is.na(pdata_bm$age)
colname(edata)
colnames(edata)
edata <- edata[,is.na(pdata_bm$age)]
mod = model.matrix(~ pdata_bm$age)
fit_limma = lmFit(edata,mod)
mod
edata <- edata[,is.na(pdata_bm$age)]
pdata_bm <- pdata_bm[,is.na(pdata_bm$age)]
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/bodymap_eset.RData")
load(file=con)
close(con)
bm = bodymap.eset
edata = exprs(bm)
pdata_bm=pData(bm)
library(limma)
edata = log2(as.matrix(edata) + 1)
edata <- edata[,!is.na(pdata_bm$age)]
pdata_bm <- pdata_bm[,!is.na(pdata_bm$age)]
dim(edata)
!is.na(pdata_bm$age)
pdata_bm <- pdata_bm[!is.na(pdata_bm$age),]
mod = model.matrix(~ pdata_bm$age)
fit_limma = lmFit(edata,mod)
fit_limma$coefficients[1000]
mod = model.matrix(pdata_bm$age ~)
fit_limma
mod = model.matrix(~ pdata_bm$age)
fit_limma$coefficients[1000,]
fit_limma$coefficients[1001,]
fit_limma$coefficients[999,]
fit_limma$coefficients[1002,]
edata = exprs(bm)
pdata_bm=pData(bm)
edata <- edata[,!is.na(pdata_bm$age)]
pdata_bm <- pdata_bm[!is.na(pdata_bm$age),]
mod = model.matrix(~ pdata_bm$age)
fit_limma = lmFit(edata,mod)
fit_limma$coefficients[100,]
fit_limma$coefficients[1000,]
fit_limma$coefficients[1000,1]+fit_limma$coefficients[1000,1]*pdata_bm$age
fitted <- fit_limma$coefficients[1000,1]+fit_limma$coefficients[1000,1]*pdata_bm$age
plot(edata[1000,], fitted)
par(mfrow=c(1,1))
plot(edata[1000,], fitted)
edata[1000,]
bm = bodymap.eset
edata = exprs(bm)
pdata_bm=pData(bm)
library(limma)
edata <- edata[,!is.na(pdata_bm$age)]
pdata_bm <- pdata_bm[!is.na(pdata_bm$age),]
mod = model.matrix(~ pdata_bm$age + pdata_bm$tissue.type)
fit_limma = lmFit(edata,mod)
pdata_bm$tissue.type
pdata_bm
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/montpick_eset.RData")
load(file=con)
close(con)
mp = montpick.eset
pdata=pData(mp)
edata=as.data.frame(exprs(mp))
fdata = fData(mp)
pdata
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/bodymap_eset.RData")
load(file=con)
close(con)
bm = bodymap.eset
edata = exprs(bm)
pdata_bm=pData(bm)
edata = log2(as.matrix(edata) + 1)
rowMeans(edata) < 1
library(limma)
set.seed(33353)
edata <- log2(as.matrix(edata) + 1)
edata <- edata(rowMeans(edata) < 1)
edata <- edata[,!is.na(pdata_bm$age)]
pdata_bm <- pdata_bm[!is.na(pdata_bm$age),]
mod = model.matrix(~ age, data=pdata_bm)
mod0 = model.matrix(~ 1, data=pdata_bm)
sva1 = sva(edata,mod,mod0,n.sv=1)
library(sva)
set.seed(33353)
edata <- log2(as.matrix(edata) + 1)
edata <- edata[rowMeans(edata) < 1]
edata <- edata[,!is.na(pdata_bm$age)]
pdata_bm <- pdata_bm[!is.na(pdata_bm$age),]
mod = model.matrix(~ age, data=pdata_bm)
mod0 = model.matrix(~ 1, data=pdata_bm)
sva1 = sva(edata,mod,mod0,n.sv=1)
bm = bodymap.eset
edata = exprs(bm)
pdata_bm=pData(bm)
library(sva)
set.seed(33353)
edata <- log2(as.matrix(edata) + 1)
edata <- edata[rowMeans(edata) < 1]
edata <- edata[,!is.na(pdata_bm$age)]
pdata_bm <- pdata_bm[!is.na(pdata_bm$age),]
mod = model.matrix(~ age, data=pdata_bm)
mod0 = model.matrix(~ 1, data=pdata_bm)
sva1 = sva(edata,mod,mod0,n.sv=1)
bm = bodymap.eset
edata = exprs(bm)
pdata_bm=pData(bm)
library(sva)
set.seed(33353)
edata <- log2(as.matrix(edata) + 1)
edata <- edata[rowMeans(edata) < 1, ]
edata <- edata[,!is.na(pdata_bm$age)]
pdata_bm <- pdata_bm[!is.na(pdata_bm$age),]
mod = model.matrix(~ age, data=pdata_bm)
mod0 = model.matrix(~ 1, data=pdata_bm)
sva1 = sva(edata,mod,mod0,n.sv=1)
mod
mod0
dim(edata)
bm = bodymap.eset
edata = exprs(bm)
pdata_bm=pData(bm)
library(sva)
set.seed(33353)
edata <- log2(as.matrix(edata) + 1)
edata <- edata[rowMeans(edata) >= 1, ]
edata <- edata[,!is.na(pdata_bm$age)]
pdata_bm <- pdata_bm[!is.na(pdata_bm$age),]
mod = model.matrix(~ age, data=pdata_bm)
mod0 = model.matrix(~ 1, data=pdata_bm)
sva1 = sva(edata,mod,mod0,n.sv=1)
sva1
sva1$sv
cor(sva1$sv, pdata_bm$age)
bm = bodymap.eset
edata = exprs(bm)
pdata_bm=pData(bm)
library(sva)
edata <- log2(as.matrix(edata) + 1)
edata <- edata[rowMeans(edata) >= 1, ]
edata <- edata[,!is.na(pdata_bm$age)]
pdata_bm <- pdata_bm[!is.na(pdata_bm$age),]
mod = model.matrix(~ age, data=pdata_bm)
mod0 = model.matrix(~ 1, data=pdata_bm)
set.seed(33353)
sva1 = sva(edata,mod,mod0,n.sv=1)
cor(sva1$sv, pdata_bm$age)
?cor
cor(sva1$sv, pdata_bm$age)
cor(pdata_bm$age, sva1$sv)
cor(sva1$sv, pdata_bm$gender)
cor(sva1$sv, as.numeric(pdata_bm$gender))
cor(sva1$sv, as.numeric(pdata_bm$race))
devtools::build_vignettes()
a1 <- 44.6
a2 <- 49.8
b1 <- 58.4
b2 <- 65.2
a1/a2
b1/b2
(a1/a2)*37.2
(a1/a2)*29.4
26.4*2*pi
26.4*pi
devtools::build_vignettes()
devtools::load_all()
your_token <- "29dd0f0d333e473cbb094e8b1014e0d1"
your_project <- "marko_zecevic/sbde-test"
your_platform <- "https://api.sbgenomics.com/v2"
DEA5 <- newDEA("Hisat_and_cuffdiff", your_token, your_project, your_platform, align_wf = "hisat2", de_wf = "cufflinks")
devtools::load_all()
devtools::load_all()
devtools::document() # use roxygen to make documentation and add stuff to namespace
devtools::load_all(".")
your_token <- "29dd0f0d333e473cbb094e8b1014e0d1"
your_project <- "marko_zecevic/sbde1"
your_platform <- "https://api.sbgenomics.com/v2"
DEA5 <- newDEA("StarDESeq2", your_token, your_project, your_platform, align_wf = "star", de_wf = "deseq2")
devtools::load_all(".")
devtools::load_all(".")
DEA5 <- newDEA("StarDESeq2", your_token, your_project, your_platform, align_wf = "star", de_wf = "deseq2")
